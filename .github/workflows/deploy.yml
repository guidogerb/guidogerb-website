name: Deploy Websites

on:
  workflow_run:
    workflows: ['Build and Test (CI)']
    types: [completed]
  workflow_dispatch:

permissions:
  contents: read

env:
  NODE_VERSION: '20.19.0'

jobs:
  deploy:
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    name: Deploy ${{ matrix.site }}
    runs-on: ubuntu-latest
    concurrency: deploy-${{ matrix.site }}
    strategy:
      fail-fast: false
      matrix:
        site:
          - garygerber.com
          - guidogerbpublishing.com
          - picklecheeze.com
          - stream4cloud.com
          - this-is-my-story.org
          - ggp.llc
    env:
      NPMRC_TOKEN: ${{ secrets.NPMRC_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.sha }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          standalone: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Configure npm auth for GitHub Packages
        if: env.NPMRC_TOKEN != ''
        shell: bash
        run: |
          set -euo pipefail
          printf '%s\n' "//npm.pkg.github.com/:_authToken=${NPMRC_TOKEN}" >> ~/.npmrc

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build shared packages
        run: pnpm -r build

      - name: Derive workspace filter from domain
        shell: bash
        env:
          MATRIX_SITE: ${{ matrix.site }}
        run: |
          set -euo pipefail
          if [[ "$MATRIX_SITE" == *.llc ]]; then
            SITE_NO_EXT="${MATRIX_SITE//./-}"   # ggp.llc -> ggp-llc
          else
            SITE_NO_EXT="${MATRIX_SITE%.*}"     # example.com -> example
          fi
          echo "SITE_NO_EXT=$SITE_NO_EXT" >> "$GITHUB_ENV"
          echo "Resolved filter: websites-$SITE_NO_EXT"

      - name: Write .env for selected site
        shell: bash
        run: |
          set -euo pipefail
          case "${{ matrix.site }}" in
            garygerber.com)
              ENV_VALUE='${{ secrets.GARYGERBER_VITE_ENV }}'
              TARGET='websites/garygerber.com/.env'
              ;;
            guidogerbpublishing.com)
              ENV_VALUE='${{ secrets.GUIDOGERBPUBLISHING_VITE_ENV }}'
              TARGET='websites/guidogerbpublishing.com/.env'
              ;;
            picklecheeze.com)
              ENV_VALUE='${{ secrets.PICKLECHEEZE_VITE_ENV }}'
              TARGET='websites/picklecheeze.com/.env'
              ;;
            stream4cloud.com)
              ENV_VALUE='${{ secrets.STREAM4CLOUD_VITE_ENV }}'
              TARGET='websites/stream4cloud.com/.env'
              ;;
            this-is-my-story.org)
              ENV_VALUE='${{ secrets.THIS_IS_MY_STORY_VITE_ENV }}'
              TARGET='websites/this-is-my-story.org/.env'
              ;;
            ggp.llc)
              ENV_VALUE='${{ secrets.GGP_LLC_VITE_ENV }}'
              TARGET='websites/ggp.llc/.env'
              ;;
            *)
              echo "Unknown site: ${{ matrix.site }}" >&2
              exit 1
              ;;
          esac

          if [[ -z "${ENV_VALUE}" ]]; then
            echo "Missing VITE env secret for ${{ matrix.site }}" >&2
            exit 1
          fi

          mkdir -p "$(dirname "$TARGET")"
          printf '%s\n' "${ENV_VALUE}" > "$TARGET"
          echo "Wrote .env to $TARGET"

      - name: Build site (branch-aware)
        shell: bash
        run: |
          set -euo pipefail
          # Resolve branch for workflow_run vs manual dispatch
          BRANCH="${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_branch || (github.base_ref || github.ref_name) }}"
          if [[ "$BRANCH" == "prod" ]]; then
            pnpm --filter "websites-${SITE_NO_EXT}" build:prod-bundle
          else
            pnpm --filter "websites-${SITE_NO_EXT}" build:staging
          fi

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.site }}-dist-${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_branch || (github.head_ref || github.ref_name) }}
          path: websites/${{ matrix.site }}/dist
          if-no-files-found: error
          retention-days: 7

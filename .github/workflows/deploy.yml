name: deploy

on:
  workflow_run:
    workflows: [ "build" ]
    types: [ completed ]
    branches: [ main, prod ]
  workflow_dispatch:
    inputs:
      site:
        description: 'Site to deploy (folder under websites)'
        required: false
        default: 'guidogerbpublishing.com'
        type: choice
        options:
          [
            stream4cloud.com,
            garygerber.com,
            guidogerbpublishing.com,
            picklecheeze.com,
            this-is-my-story.org,
          ]
      aws_region:
        description: 'AWS region'
        required: false
        default: 'us-east-1'
      bucket:
        description: 'Target S3 bucket name'
        required: false
        default: 'ggp-websites'
      distribution_id:
        description: 'CloudFront Distribution ID'
        required: false
        default: 'E1MM1G0JP81M1R'
      invalidate_prefix_only:
        description: 'Invalidate only the site prefix'
        required: false
        default: 'false'
        type: choice
        options: ['false', 'true']

env:
  SITE: ${{ inputs.site || vars.SITE || 'guidogerbpublishing.com' }}
  AWS_REGION: ${{ inputs.aws_region || vars.AWS_REGION || 'us-east-1' }}
  BUCKET: ${{ inputs.bucket || vars.BUCKET || 'ggp-websites' }}
  DISTRIBUTION_ID: ${{ inputs.distribution_id || vars.DISTRIBUTION_ID || 'E1MM1G0JP81M1R' }}
  INVALIDATE_PREFIX_ONLY: ${{ inputs.invalidate_prefix_only || vars.INVALIDATE_PREFIX_ONLY || 'false' }}

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      NPMRC_TOKEN: ${{ secrets.NPMRC_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: List build output
        run: ls -l websites/${{ env.SITE }}

      - name: Build selected site
        run: pnpm --filter websites/${{ env.SITE }} build

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-region:  ${{ env.AWS_REGION }}
          ## the following creates an ARN based on the values entered into github secrets
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_DEPLOY_ROLE }}
          role-session-name: github-actions-deploy

      - name: Upload to S3 (tenant prefix)
        run: |
          set -euo pipefail
          SRC="websites/${SITE}/dist"
          DEST="s3://${BUCKET}/${SITE}/"
          aws s3 sync "$SRC" "$DEST" --delete

      - name: Compute invalidation path
        id: inv
        run: |
          if [ "${INVALIDATE_PREFIX_ONLY}" = "true" ]; then
            echo "paths=/${SITE}/*" >> "$GITHUB_OUTPUT"
          else
            echo "paths=/*" >> "$GITHUB_OUTPUT"
          fi

      - name: Invalidate CloudFront
        env:
          PATHS: ${{ steps.inv.outputs.paths }}
        run: |
          aws cloudfront create-invalidation --distribution-id "${DISTRIBUTION_ID}" --paths "${PATHS}"

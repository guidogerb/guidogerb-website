name: deploy

on:
  workflow_run:
    workflows: ['Build and Test (CI)']
    types: [completed]
  workflow_dispatch:
    inputs:
      aws_region:
        description: 'AWS region'
        required: false
        default: 'us-east-1'
      bucket:
        description: 'S3 bucket name'
        required: false
        default: 'ggp-websites'
      distribution_id:
        description: 'CloudFront distribution ID'
        required: false
        default: 'E1MM1G0JP81M1R'
      invalidate_prefix_only:
        description: 'Invalidate prefix only'
        required: false
        default: 'true'

env:
  AWS_REGION: ${{ inputs.aws_region || vars.AWS_REGION || 'us-east-1' }}
  BUCKET: ${{ inputs.bucket || vars.BUCKET || 'ggp-websites' }}
  DISTRIBUTION_ID: ${{ inputs.distribution_id || vars.DISTRIBUTION_ID || 'E1MM1G0JP81M1R' }}
  INVALIDATE_PREFIX_ONLY: ${{ inputs.invalidate_prefix_only || vars.INVALIDATE_PREFIX_ONLY || 'true' }}

jobs:
  deploy:
    if: >
      (github.event_name == 'workflow_run' &&
       github.event.workflow_run.conclusion == 'success' &&
       (github.event.workflow_run.head_branch == 'main' || github.event.workflow_run.head_branch == 'prod'))
      || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      NPMRC_TOKEN: ${{ secrets.NPMRC_TOKEN }}
    strategy:
      matrix:
        site:
          - stream4cloud.com
          - garygerber.com
          - guidogerbpublishing.com
          - picklecheeze.com
          - this-is-my-story.org
          - ggp.llc
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Build selected site
        env:
          MATRIX_SITE: ${{ matrix.site }}
        run: |
          SITE_NO_EXT="${MATRIX_SITE%.*}"
          pnpm --filter "websites-${SITE_NO_EXT}" build

      - name: List build output
        run: |
          ls -l "websites/${{ matrix.site }}" || true
          ls -l "websites/${{ matrix.site }}/dist" || echo "dist folder missing"

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_DEPLOY_ROLE }}
          role-session-name: github-actions-deploy

      - name: Upload to S3 (tenant prefix)
        run: |
          SRC="websites/${{ matrix.site }}/dist"
          DEST="s3://${{ env.BUCKET }}/${{ matrix.site }}/"
          echo "Syncing $SRC to $DEST"
          aws s3 sync "$SRC" "$DEST" --delete
